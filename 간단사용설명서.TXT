*사전준비 : git설치하기, 소스트리설치하기, 깃허브 회원가입하기

git은 사용자가 명령어단위로 제어할 수 있는 버전관리프로그램입니다.

배워야될 명령어가  많고 직관적이지않아서 '소스트리'라는 깃의 흐름을 시각화해주는 GUI툴을 이용합니다


<기본기능>

[GIT INIT] : 내 컴퓨터의 특정 디렉토리를 깃이 관리할 수 있도록 깃을 등록합니다
	
		등록한 순간부터 디렉토리의 모든변경점을 깃이 추적합니다.

		소스트리의 create기능입니다.

[GIT ADD] : 깃의 변경사항을 stage area에 등록합니다.

		커밋하기 전 준비과정 같은겁니다.
	

[GIT COMMIT] : 내 작업공간의 변경사항을 로컬저장소(.git repository)에 커밋(제출)합니다

		제출된 커밋은 프로젝트 유지보수의 기준이되며 

		협업을위해서 추가로 적게되는 커밋메시지를 상세하게 작성해야합니다.
------------------------------------------------------------------------------------------------
<원격기능>

깃허브를 이용하려면 내 로컬저장소(본인의 작업공간)와 원격저장소(github)를 연결해야합니다

소스트리의 '원격'기능으로 연결합니다.

[GIT CLONE] : 원격저장소의 모든 정보를 내 로컬저장소에 복사합니다

		(복사할 폴더가 비어있어야함)

[GIT PUSH] : 내 로컬저장소의 커밋을 원격저장소에 등록합니다

[GIT PULL] : 원격저장소의 변경사항을 내 로컬저장소로 가져옵니다 

		(작업시작전에는 꼭 pull먼저해놓을것)
------------------------------------------------------------------------------------------------
<기타기능>

[GIT BRANCH] : 브랜치는 나무의 가지처럼 프로젝트의 분기점을 만드는기능입니다. 

[GIT MERGE] : 갈라진 프로젝트의 분기점을 하나로합칩니다.
		
		소스트리의 '병합'기능임

[GIT RESET] : 이전 커밋으로 되돌아갑니다. 		

		소스트리의 '이 커밋까지 현재 브랜치를 초기화'기능임
		
[GIT CHECKOUT] :  HEAD값을 변경합니다

		HEAD는 현재 작업상태를 가리키는 지시자 같은겁니다.		





		